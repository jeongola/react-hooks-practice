{"ast":null,"code":"var _jsxFileName = \"/Users/yoojeongkim/Documents/Kim-Yoo-Jeong/[\\u110B\\u1172\\u1103\\u1166\\u1106\\u1175] React \\u110B\\u116A\\u11AB\\u1107\\u1167\\u11A8 \\u1100\\u1161\\u110B\\u1175\\u1103\\u1173 with TypeScript, Next.js, Redux/react-hooks-practice/react-hooks-practice/src/store/auth-context.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {}\n});\nexport const AuthContextProvier = props => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n  const loginHandler = () => {\n    setIsLoggedIn(true);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: loginHandler,\n      onLogin: logoutHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthContextProvier, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = AuthContextProvier;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvier\");","map":{"version":3,"names":["React","useState","AuthContext","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvier","props","setIsLoggedIn","logoutHandler","loginHandler","children"],"sources":["/Users/yoojeongkim/Documents/Kim-Yoo-Jeong/[유데미] React 완벽 가이드 with TypeScript, Next.js, Redux/react-hooks-practice/react-hooks-practice/src/store/auth-context.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst AuthContext = React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {},\n});\n\nexport const AuthContextProvier = (props) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  const loginHandler = () => {\n    setIsLoggedIn(true);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{ isLoggedIn: isLoggedIn, onLogout: loginHandler, onLogin: logoutHandler }}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAa,CAAC;EACtCC,UAAU,EAAE,KAAK;EACjBC,QAAQ,EAAE,MAAM,CAAC,CAAC;EAClBC,OAAO,EAAE,CAACC,KAAK,EAAEC,QAAQ,KAAK,CAAC;AACjC,CAAC,CAAC;AAEF,OAAO,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;EAAA;EAC3C,MAAM,CAACN,UAAU,EAAEO,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMW,aAAa,GAAG,MAAM;IAC1BD,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,MAAME,YAAY,GAAG,MAAM;IACzBF,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,oBACE,QAAC,WAAW,CAAC,QAAQ;IACnB,KAAK,EAAE;MAAEP,UAAU,EAAEA,UAAU;MAAEC,QAAQ,EAAEQ,YAAY;MAAEP,OAAO,EAAEM;IAAc,CAAE;IAAA,UACjFF,KAAK,CAACI;EAAQ;IAAA;IAAA;IAAA;EAAA,QACM;AAE3B,CAAC;AAAC,GAjBWL,kBAAkB;AAAA,KAAlBA,kBAAkB;AAmB/B,eAAeP,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}